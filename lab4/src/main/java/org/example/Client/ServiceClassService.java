
package org.example.Client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ServiceClassService", targetNamespace = "http://example.org/", wsdlLocation = "http://localhost:8078/MyService?wsdl")
public class ServiceClassService
    extends Service
{

    private final static URL SERVICECLASSSERVICE_WSDL_LOCATION;
    private final static WebServiceException SERVICECLASSSERVICE_EXCEPTION;
    private final static QName SERVICECLASSSERVICE_QNAME = new QName("http://example.org/", "ServiceClassService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8078/MyService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SERVICECLASSSERVICE_WSDL_LOCATION = url;
        SERVICECLASSSERVICE_EXCEPTION = e;
    }

    public ServiceClassService() {
        super(__getWsdlLocation(), SERVICECLASSSERVICE_QNAME);
    }

    public ServiceClassService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SERVICECLASSSERVICE_QNAME, features);
    }

    public ServiceClassService(URL wsdlLocation) {
        super(wsdlLocation, SERVICECLASSSERVICE_QNAME);
    }

    public ServiceClassService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICECLASSSERVICE_QNAME, features);
    }

    public ServiceClassService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceClassService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ServiceClass
     */
    @WebEndpoint(name = "ServiceClassPort")
    public ServiceClass getServiceClassPort() {
        return super.getPort(new QName("http://example.org/", "ServiceClassPort"), ServiceClass.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceClass
     */
    @WebEndpoint(name = "ServiceClassPort")
    public ServiceClass getServiceClassPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://example.org/", "ServiceClassPort"), ServiceClass.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SERVICECLASSSERVICE_EXCEPTION!= null) {
            throw SERVICECLASSSERVICE_EXCEPTION;
        }
        return SERVICECLASSSERVICE_WSDL_LOCATION;
    }

}
